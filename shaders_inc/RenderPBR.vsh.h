"#include \"BasicStructures.fxh\"\n"
"#include \"VertexProcessing.fxh\"\n"
"#include \"PBR_Structures.fxh\"\n"
"#include \"RenderPBR_Structures.fxh\"\n"
"\n"
"#include \"VSInputStruct.generated\"\n"
"//struct VSInput\n"
"//{\n"
"//    float3 Pos     : ATTRIB0;\n"
"//    float3 Normal  : ATTRIB1;\n"
"//    float2 UV0     : ATTRIB2;\n"
"//    float2 UV1     : ATTRIB3;\n"
"//    float4 Joint0  : ATTRIB4;\n"
"//    float4 Weight0 : ATTRIB5;\n"
"//    float4 Color   : ATTRIB6;\n"
"//    float3 Tangent : ATTRIB7;\n"
"//};\n"
"\n"
"#include \"VSOutputStruct.generated\"\n"
"// struct VSOutput\n"
"// {\n"
"//     float4 ClipPos  : SV_Position;\n"
"//     float3 WorldPos : WORLD_POS;\n"
"//     float4 Color    : COLOR;\n"
"//     float3 Normal   : NORMAL;\n"
"//     float2 UV0      : UV0;\n"
"//     float2 UV1      : UV1;\n"
"//     float3 Tangent  : TANGENT;\n"
"// };\n"
"\n"
"#ifndef MAX_JOINT_COUNT\n"
"#   define MAX_JOINT_COUNT 64\n"
"#endif\n"
"\n"
"cbuffer cbFrameAttribs\n"
"{\n"
"    PBRFrameAttribs g_Frame;\n"
"}\n"
"\n"
"cbuffer cbPrimitiveAttribs\n"
"{\n"
"    PBRPrimitiveAttribs g_Primitive;\n"
"}\n"
"\n"
"#if MAX_JOINT_COUNT > 0 && USE_JOINTS\n"
"cbuffer cbJointTransforms\n"
"{\n"
"    float4x4 g_Joints[MAX_JOINT_COUNT];\n"
"}\n"
"#endif\n"
"\n"
"void main(in  VSInput  VSIn,\n"
"          out VSOutput VSOut)\n"
"{\n"
"    // Warning: moving this block into GLTF_TransformVertex() function causes huge\n"
"    // performance degradation on Vulkan because glslang/SPIRV-Tools are apparently not able\n"
"    // to eliminate the copy of g_Transforms structure.\n"
"    float4x4 Transform = g_Primitive.Transforms.NodeMatrix;\n"
"\n"
"#if MAX_JOINT_COUNT > 0 && USE_JOINTS\n"
"    if (g_Primitive.Transforms.JointCount > 0)\n"
"    {\n"
"        // Mesh is skinned\n"
"        float4x4 SkinMat =\n"
"            VSIn.Weight0.x * g_Joints[int(VSIn.Joint0.x)] +\n"
"            VSIn.Weight0.y * g_Joints[int(VSIn.Joint0.y)] +\n"
"            VSIn.Weight0.z * g_Joints[int(VSIn.Joint0.z)] +\n"
"            VSIn.Weight0.w * g_Joints[int(VSIn.Joint0.w)];\n"
"        Transform = mul(Transform, SkinMat);\n"
"    }\n"
"#endif\n"
"\n"
"#if USE_VERTEX_NORMALS\n"
"    float3 Normal = VSIn.Normal;\n"
"#else\n"
"    float3 Normal = float3(0.0, 0.0, 1.0);\n"
"#endif\n"
"\n"
"    GLTF_TransformedVertex TransformedVert = GLTF_TransformVertex(VSIn.Pos, Normal, Transform);\n"
"\n"
"    VSOut.ClipPos  = mul(float4(TransformedVert.WorldPos, 1.0), g_Frame.Camera.mViewProj);\n"
"    VSOut.WorldPos = TransformedVert.WorldPos;\n"
"\n"
"#if USE_VERTEX_COLORS\n"
"    VSOut.Color    = VSIn.Color;\n"
"#endif\n"
"\n"
"#if USE_VERTEX_NORMALS\n"
"    VSOut.Normal   = TransformedVert.Normal;\n"
"#endif\n"
"\n"
"#if USE_TEXCOORD0\n"
"    VSOut.UV0      = VSIn.UV0;\n"
"#endif\n"
"\n"
"#if USE_TEXCOORD1\n"
"    VSOut.UV1      = VSIn.UV1;\n"
"#endif\n"
"\n"
"#if USE_VERTEX_TANGENTS\n"
"    VSOut.Tangent  = normalize(mul(float3x3(Transform[0].xyz, Transform[1].xyz, Transform[2].xyz), VSIn.Tangent));\n"
"#endif\n"
"\n"
"#ifdef USE_GL_POINT_SIZE\n"
"#   ifdef VULKAN\n"
"        VSOut.PointSize = g_Frame.Renderer.PointSize;\n"
"#   else\n"
"        // If gl_PointSize is not defined, points are not rendered in GLES\n"
"        gl_PointSize = g_Frame.Renderer.PointSize;\n"
"#   endif\n"
"#endif\n"
"}\n"
